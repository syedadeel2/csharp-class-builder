////////////////////////////////////////////////////////////////////////////////////////////////////
// file:	IClass.cs
//
// summary:	Declares the IClass interface
////////////////////////////////////////////////////////////////////////////////////////////////////

namespace Rizvis.ClassBuilder.Interfaces
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   Interface for class. </summary>
    ///
    /// <remarks>   Rizvi, 19/09/2020. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public interface IClass
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Creates class static. </summary>
        ///
        /// <param name="name">         The name. </param>
        /// <param name="modifier">     The modifier. </param>
        /// <param name="description">  (Optional) The description. </param>
        ///
        /// <returns>   The new class static. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClass CreateClass(string name, Modifier modifier, string description = "");

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   With namespace. </summary>
        ///
        /// <param name="nameSpace">    The name space. </param>
        ///
        /// <returns>   An IClassElement. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClass WithNamespace(string nameSpace);

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Extend with. </summary>
        ///
        /// <param name="extendClassOrInterfaceName">   Name of the extend class or interface. </param>
        ///
        /// <returns>   An IClassElement. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClass ExtendWith(string extendClassOrInterfaceName);

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Import package. </summary>
        ///
        /// <param name="packageName">  Name of the package. </param>
        ///
        /// <returns>   An IClassElement. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClass ImportPackage(string packageName);

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Converts this  to a static. </summary>
        ///
        /// <returns>   An IClassElement. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClass AsStatic();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Converts this  to a sealed. </summary>
        ///
        /// <returns>   An IClassElement. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClass AsSealed();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Converts this  to an abstract. </summary>
        ///
        /// <returns>   An IClassElement. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClass AsAbstract();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the build. </summary>
        ///
        /// <returns>   An IClassElement. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClassElement Build();


    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////
// file:	Interfaces\IClassProperty.cs
//
// summary:	Declares the IClassProperty interface
////////////////////////////////////////////////////////////////////////////////////////////////////

namespace Rizvis.ClassBuilder.Interfaces
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   Interface for class element. </summary>
    ///
    /// <remarks>   Rizvi, 19/09/2020. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public interface IClassProperty
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Creates a method. </summary>
        ///
        /// <param name="name">     The name. </param>
        /// <param name="modifier"> The modifier. </param>
        ///
        /// <returns>   The new method. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClassProperty CreateProperty(string name, Modifier modifier);

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Converts a type to a return with. </summary>
        ///
        /// <typeparam name="T">    Generic type parameter. </typeparam>
        /// <param name="type"> The type. </param>
        ///
        /// <returns>   An IClassProperty. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClassProperty AsReturnWithType<T>(T type);

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Converts a type to a return with. </summary>
        ///
        /// <param name="type"> The type. </param>
        ///
        /// <returns>   An IClassProperty. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClassProperty AsReturnWith(string type);

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Adds a property description. </summary>
        ///
        /// <param name="description">  The description. </param>
        ///
        /// <returns>   An IClassProperty. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClassProperty AddPropertyDescription(string description);

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Converts this  to an abstract. </summary>
        ///
        /// <returns>   An IClassProperty. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClassProperty AsAbstract();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Converts this  to a static. </summary>
        ///
        /// <returns>   An IClassProperty. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClassProperty AsStatic();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Reads the only. </summary>
        ///
        /// <returns>   The only. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClassProperty ReadOnly();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the getter. </summary>
        ///
        /// <returns>   An IClassProperty. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClassProperty Getter();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the setter. </summary>
        ///
        /// <returns>   An IClassProperty. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClassProperty Setter();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the build. </summary>
        ///
        /// <returns>   An IClassProperty. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        IClassProperty Build();


    }
}
